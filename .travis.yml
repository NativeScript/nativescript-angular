env:
  global:
    - NODE_VERSION=8.9.1
    - EMULATOR_API_LEVEL=23
    - ANDROID_VERSION=25
    - ANDROID_BUILD_TOOLS_VERSION=26.0.2
    - ANDROID_ABI=armeabi-v7a
    - EMULATOR_NAME=AndroidEmulator
    - ANDROID_TAG=google_apis
    - ANDROID_PACKAGE='router.apk'
    - ANDROID_PACKAGE_FOLDER=$TRAVIS_BUILD_DIR/platforms/android/app/build/outputs/apk/debug/
    - ANDROID_SAUCE_STORAGE="https://saucelabs.com/rest/v1/storage/$SAUCE_USER/$ANDROID_PACKAGE?overwrite=true"
    - IOS_PACKAGE='router.zip'
    - IOS_APP_NAME='router.app'
    - IOS_PACKAGE_FOLDER=$TRAVIS_BUILD_DIR/platforms/ios/build/emulator
    - IOS_SAUCE_STORAGE="https://saucelabs.com/rest/v1/storage/$SAUCE_USER/$IOS_PACKAGE?overwrite=true"
matrix:
  include:
    - stage: "Lint"
      language: node_js
      os: linux
      before_install: 
        - nvm install $NODE_VERSION
      script: 
        - cd nativescript-angular
        - npm install
        - npm run tslint
    # - stage: "Run UnitTests"
    #   os: osx
    #   env:
    #     - Build="iOS"
    #   osx_image: xcode9.3
    #   language: node_js
    #   node_js: $NODE_VERSION
    #   jdk: oraclejdk8
    #   before_install: 
    #     - cd nativescript-angular
    #     - npm install
    #     - cd ../tests
    #     - npm install
    #     - cd ..
    #   script: 
    #     - cd nativescript-angular
    #     - npm run ngc
    #     - cd ../tests
    #     - tns build ios
    #     - travis_wait travis_retry tns test ios --justlaunch
    # - language: android
    #   node_js: $NODE_VERSION
    #   os: linux
    #   env:
    #     - Build="Android"
    #   jdk: oraclejdk8
    #   before_install: 
    #     - echo no | android create avd --force -n $EMULATOR_NAME -t "android-"$EMULATOR_API_LEVEL --abi $ANDROID_ABI --tag $ANDROID_TAG -c 12M
    #     - QEMU_AUDIO_DRV=none emulator -avd $EMULATOR_NAME -no-window &
    #     - nvm install $NODE_VERSION
    #     - cd nativescript-angular
    #     - npm install
    #     - cd ../tests
    #     - npm install
    #     - cd .. 
    #     - android-wait-for-emulator
    #     - adb shell input keyevent 82 &
    #   script: 
    #     - cd nativescript-angular
    #     - npm run ngc
    #     - cd ../tests    
    #     - tns build android
    #     - travis_wait travis_retry tns test android --justlaunch
    - stage: "Build Router App"
      os: osx
      env: 
        - BuildiOS="11"
        - Xcode="9.2"
      osx_image: xcode9.2
      language: node_js 
      node_js: $NODE_VERSION
      jdk: oraclejdk8
      script:
        - tns build ios
        - cd $IOS_PACKAGE_FOLDER && zip -r $IOS_PACKAGE $IOS_APP_NAME
        - "curl -u $SAUCE_USER:$SAUCE_KEY -X POST -H 'Content-Type: application/octet-stream' $IOS_SAUCE_STORAGE --data-binary @$IOS_PACKAGE_FOLDER/$IOS_PACKAGE"
    - language: android
      env: 
        - BuildAndroid="26"
      os: linux
      jdk: oraclejdk8
      before_install: nvm install 8.9.1
      script:
        - tns build android
        - "curl -u $SAUCE_USER:$SAUCE_KEY -X POST -H 'Content-Type: application/octet-stream' $ANDROID_SAUCE_STORAGE --data-binary @$ANDROID_PACKAGE_FOLDER/app-debug.apk"
    - stage: "UI Tests"
      env: 
        - AndroidEmulator="23"
      language: node_js
      os: linux
      node_js: $NODE_VERSION
      script:
        - npm i -g appium
        - npm i
        - travis_retry npm run e2e -- --runType android23 --sauceLab  --appPath $ANDROID_PACKAGE
    - os: linux
      env: 
        - iOS="11"
      language: node_js 
      node_js: $NODE_VERSION
      script: 
        - npm i -g appium
        - npm i
        - travis_wait travis_retry npm run e2e -- --runType sim.iPhone8 --sauceLab --appPath $IOS_PACKAGE
android:
  components:
    - tools
    - platform-tools
    - build-tools-25.0.2
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
    - android-26
    - android-$EMULATOR_API_LEVEL
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-25
    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-26
    - sys-img-armeabi-v7a-android-25
    - sys-img-armeabi-v7a-android-$EMULATOR_API_LEVEL
    - sys-img-armeabi-v7a-google_apis-$EMULATOR_API_LEVEL
  licenses:
    - ".+"

before_cache:
    - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
    directories:
        - .nvm
        - $HOME/.gradle/caches/
        - $HOME/.gradle/wrapper/

install:
    - nvm install $NODE_VERSION
    - npm install -g typings
    - wget -O ./nativescript.tgz "https://s3.amazonaws.com/nativescript-ci/build_result/nativescript.tgz"
    - npm install -g nativescript.tgz --ignore-scripts
    - tns usage-reporting disable
    - tns error-reporting disable
